module __src_runtime;

import <cstdio> as stdio;
import <cstdlib> as stdlib;

/// Called when an `assert` fails.
export proc __src_assert_fail(
    i8[] cond,
    i8[] message,
    i8[] file,
    int line,
    int col
) nomangle -> noreturn {
    stdio::printf "%.*s:%zu:%zu: Assertion failed '%.*s'".data,
        file.size as __srcc_ffi_int, file.data,
        line, col,
        cond.size as __srcc_ffi_int, cond.data;

    if message.size > 0 then
        stdio::printf ": %.*s".data, message.size as __srcc_ffi_int, message.data;

    stdio::printf "\n".data;
    stdlib::exit 17;
}

/// Entry point emitted by the compiler.
proc __src_main extern nomangle;

/// Actual main function.
export proc main(
    __srcc_ffi_int argc,
    __srcc_ffi_char&& argv,
    __srcc_ffi_char&& envp
) native -> __srcc_ffi_int {
    __src_main();
    return 0;
}
