module string;

import <cstdio>.*;

struct string {
    /// TODO: SSO.
    i8&? ptr;
    int size;
    int capacity;

    init {
        .ptr = nil;
        .size = 0;
        .capacity = 0;
    }

    init (i8[] str) {
        .init;
        .append str;
    }

    proc append (with string& s, i8[] str) -> string& {
        if str.size < 0 then return s;
        .reserve str.size;
        assert .ptr, "reserve() must allocate memory";
        __srcc_memcpy .ptr, str.data, str.size;
        .size += str.size;
        return s;
    }

    proc reserve (int size) {
        assert false, "Todo";
    }
}

string s;
s.append "hello";
s.append " world";
printf "%.*s".data, s.size as __srcc_ffi_int, s.ptr;