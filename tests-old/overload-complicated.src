/// { "code": 3 }

/// One of the earlier Intercept overloading test cases.
///
/// This is a complicated one, the situation is basically this:
/// the rows of the table below are the possible overloads of a
/// call whose arguments are all overload sets themselves, and the
/// columns are the possible overloads for the arguments.
///
/// Given a call `f(a, b, c)` and the following situation (an x indicates
/// that there is a valid overload (of a, b, or c) for that parameter
/// of a specific overload of f.
///
///    a  b  c
/// f1 x
/// f2 x  x
/// f3 x  x  x
/// f4    x  x
/// f5       x
///
/// Here, overload f3 must be selected.

import sys;

proc a {};
proc a (i8 x) {};
proc a (i8^ x) -> i8 = 0;

proc f (proc,                proc         -> i8^, proc         -> i8^) -> i8 = 1;
proc f (proc (i8 x),         proc,                proc         -> i8^) -> i8 = 2;
proc f (proc (i8^ x) -> i8,  proc (i8 x),         proc               ) -> i8 = 3;
proc f (proc         -> i8^, proc (i8^ x) -> i8,  proc (i8 x)        ) -> i8 = 4;
proc f (proc         -> i8^, proc         -> i8^, proc (i8^ x) -> i8 ) -> i8 = 5;

sys.exit(f(a, a, a));