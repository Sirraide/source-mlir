struct foo {
    int a;
    init { .a = 42; }
    init (int a) { .a = a; }
}

int[5]    int_default;
int[5]    int_broadcast = 1;
int[5]    int_empty = [];
int[5]    int_partial = [1, 2, 3];
int[5]    int_full = [1, 2, 3, 4, 5];
int[2][2] int_nested_complete = [[1, 2], [3, 4]];
int[3][4] int_nested_incomplete = [
    [1, 2, 3],
    [4],
    [],
];

foo[5]    foo_default;
foo[5]    foo_broadcast = 1;
foo[5]    foo_empty = [];
foo[5]    foo_partial = [1, 2, 3];
foo[5]    foo_full = [1, 2, 3, 4, 5];
foo[2][2] foo_nested_complete = [[1, 2], [3, 4]];
foo[3][4] foo_nested_incomplete = [
    [1, 2, 3],
    [4],
    [],
];

///
///int sum;
///for i in a do sum += i;
///for n in b
///    for i in n do
///        sum += i;
///
///assert sum == 60;
