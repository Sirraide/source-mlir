/// Features added today:
///
/// - Simple stdio module.
/// - Optionals (nullable refs only for now)
/// - nil
/// - var
/// - for in
/// - for~ in

import libc.*;

proc isdigit(i8 c) = c >= '0'[0] and c <= '9'[0];

proc die(i8[] message) -> noreturn {
    printf "%.*s: ".data, message.size as i32, message.data;
    perror nil;
    exit 1;
}

i8[1024] buffer;
var file = fopen "input".data, "rb".data;
if not file then die "Could not open input file";
defer fclose file;

int sum;

/// Because of the check above, the compiler knows that
/// `file` is non-nil here, so it unwraps it automatically.
while fgets buffer, 1024, file {
    i8[] line = buffer, strlen buffer;
    i8 first;
    i8 last;

    /// Find first number.
    for c in line if isdigit c {
        first = c - '0'[0];
        break;
    }

    /// Find last number.
    for~ c in line if isdigit c {
        last = c - '0'[0];
        break;
    }

    sum += first * 10 + last;
}

printf "Sum: %d\n".data, sum;












