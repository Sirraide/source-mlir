/// R %srcc %s --hlir

/// d t %[a-zA-Z0-9_]+
/// p lit []

proc sink (i32) extern;

/// b
/// * scope
/// + $s:t = local @S
/// + construct $s init @_SXS1SPE
/// + $sum:t = call @_SWS1S3sumPsS1SE($s) -> i32
/// + call @_S4sinkPI32_E($sum)
S s;
sink s.sum();

struct S {
    i32 a;
    i32 b;

    init {
        .a = 22;
        .b = 20;
    }

    /// TODO: ‘this’ should be passed by value here.
    ///
    /// b
    /// * hlir.func private @_SWS1S3sumPsS1SE
    /// + $ret:t = scope i32 {
    /// + $aref:t = structgep %arg0[0]
    /// + $a:t = load i32 from $aref
    /// + $bref:t = structgep %arg0[1]
    /// + $b:t = load i32 from $bref
    /// + $sum:t = add i32 $a, $b
    /// + yield i32 $sum
    /// + }
    /// + return i32 $ret
    proc sum (with S) = .a + .b;
}
