/// R %srcc %s --hlir

/// d t %[a-zA-Z0-9_]+

struct foo {
    i64 x;

    init {
        .x = 10;
    }

    init (i64 x) {
        .x = x;
    }

    init (i64 x, i64 y) {
        .x = x + y;
    }
}

/// b
/// * hlir.func external @__src_main
/// + scope
/// + (?<a>$t) = local
/// + construct $a init @_SC3fooPE
/// + (?<b>$t) = local
/// + (?<twenty>$t) = arith.constant 20
/// + construct $b init @_SC3fooPI64_E(i64 $twenty)
/// + (?<c>$t) = local
/// + (?<three>$t) = arith.constant 3
/// + (?<nine>$t) = arith.constant 9
/// + construct $c init @_SC3fooPI64_I64_E(i64 $three, i64 $nine)
foo a;
foo b = 20;
foo c = 3, 9;

/// var d = foo();
/// var e = foo(20);
/// var f = foo(3, 9);

/// b
/// * hlir.func private @_SC3fooPE
/// + scope
/// + (?<x>$t) = structgep $t, 0 -> i64&
/// + (?<ten>$t) = arith.constant 10
/// + store into $x, i64 $ten

/// b
/// * hlir.func private @_SC3fooPI64_E
/// + (?<param1>$t) = local i64
/// + store into $param1
/// + scope
/// + (?<x>$t) = structgep $t, 0 -> i64&
/// + (?<val1>$t) = load i64 from $param1
/// + store into $x, i64 $val1

/// b
/// * hlir.func private @_SC3fooPI64_I64_E
/// + (?<param1>$t) = local i64
/// + store into $param1
/// + (?<param2>$t) = local i64
/// + store into $param2
/// + scope
/// + (?<x>$t) = structgep $t, 0 -> i64&
/// + (?<val1>$t) = load i64 from $param1
/// + (?<val2>$t) = load i64 from $param2
/// + (?<sum>$t) = arith.addi $val1, $val2
/// + store into $x, i64 $sum
