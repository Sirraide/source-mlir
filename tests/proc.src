/// RUN: %srcc %s --hlir | FileCheck %s
proc discard (int a) extern;

/// CHECK:      func.func private @takes_int
proc takes_int (int a) {
    /// CHECK-NEXT: [[A:%[0-9]+]] = hlir.local_var
    /// CHECK-NEXT: hlir.store into [[A]]
    /// CHECK: [[A1:%[0-9]+]] = hlir.load [[A]]
    /// CHECK-NEXT: [[A2:%[0-9]+]] = hlir.load [[A]]
    /// CHECK-NEXT: [[SUM:%[0-9]+]] = arith.addi [[A1]], [[A2]]
    /// CHECK-NEXT: call_indirect
    discard a + a;
}

/// CHECK:      func.func private @invoke
proc invoke() {
    /// CHECK:      arith.constant 1
    /// CHECK-NEXT: call_indirect
    /// CHECK:      arith.constant 2
    /// CHECK-NEXT: call_indirect
    takes_int 1;
    takes_int 2;

    /// CHECK:      arith.constant 3
    /// CHECK-NEXT: call_indirect
    /// CHECK:      arith.constant 4
    /// CHECK-NEXT: call_indirect
    takes_int(3);
    takes_int(4);
}
