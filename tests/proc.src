/// R ./srcc %s --hlir
proc discard (int a) extern;

/// d t %[a-zA-Z0-9_]+

/// * func.func private @takes_int
proc takes_int (int a) {
    /// + (?<A>$t) = hlir.local_var
    /// + hlir.store into $A
    /// * (?<A1>$t) = hlir.load $A
    /// + (?<A2>$t) = hlir.load $A
    /// + (?<SUM>$t) = arith.addi $A1, $A2
    /// + call_indirect
    discard a + a;
}

/// * func.func private @invoke
proc invoke() {
    /// *      arith.constant 1
    /// + call_indirect
    /// *      arith.constant 2
    /// + call_indirect
    takes_int 1;
    takes_int 2;

    /// *      arith.constant 3
    /// + call_indirect
    /// *      arith.constant 4
    /// + call_indirect
    takes_int(3);
    takes_int(4);
}
